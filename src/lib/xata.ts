// Generated by Xata Codegen 0.29.2. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "projects",
    columns: [
      { name: "name", type: "string", notNull: true, defaultValue: "Project" },
      { name: "starting_date", type: "datetime", defaultValue: "now" },
      { name: "completed", type: "bool", defaultValue: "false" },
      { name: "brief", type: "string" },
      { name: "tools", type: "multiple" },
      { name: "tech_stack", type: "multiple" },
      { name: "repository", type: "string" },
      { name: "category", type: "string" },
      { name: "tags", type: "multiple" },
    ],
  },
  {
    name: "social-profiles",
    columns: [
      {
        name: "platform",
        type: "string",
        notNull: true,
        defaultValue: "Website",
      },
      {
        name: "username",
        type: "string",
        notNull: true,
        defaultValue: "TuritoYuenan",
      },
      { name: "link", type: "string" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Projects = InferredTypes["projects"];
export type ProjectsRecord = Projects & XataRecord;

export type SocialProfiles = InferredTypes["social-profiles"];
export type SocialProfilesRecord = SocialProfiles & XataRecord;

export type DatabaseSchema = {
  projects: ProjectsRecord;
  "social-profiles": SocialProfilesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://TuritoYuenan-1fs98q.ap-southeast-2.xata.sh/db/personal-database",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
